---
- set_fact:
    real_ansible_host: "{{ ansible_host }}"

- name: 'Update APT package cache'
  become: true
  action: apt update_cache=yes

- name: 'Upgrade APT to the lastest packages'
  become: true
  action: apt upgrade=safe

- name: 'rm old fiyeli'
  become: false
  command: rm -rf ~/Fiyeli

- name: ansible create directory fiyeli
  file:
    path: ~/Fiyeli
    state: directory
  become: false

- name: Download and extract fiyeli core
  unarchive:
    src: https://github.com/fiyeli/core/archive/master.zip
    dest: ~/Fiyeli
    remote_src: yes
  become: false
- name: rename core-master
  become: false
  command: mv ~/Fiyeli/core-master ~/Fiyeli/core

- name: Download and extract fiyeli camera
  become: false
  unarchive:
    src: https://github.com/fiyeli/camera/archive/master.zip
    dest: ~/Fiyeli
    remote_src: yes
- name: rename core-master
  become: false
  command: mv ~/Fiyeli/camera-master ~/Fiyeli/camera

- name: Download and extract fiyeli Fiyeli-Darknet-NNPACK
  become: false
  unarchive:
    src: https://github.com/fiyeli/Fiyeli-Darknet-NNPACK/archive/master.zip
    dest: ~/Fiyeli
    remote_src: yes
- name: rename core-master
  become: false
  command: mv ~/Fiyeli/Fiyeli-Darknet-NNPACK-master ~/Fiyeli/Fiyeli-Darknet-NNPACK

- name: Download and extract fiyeli api
  become: false
  unarchive:
    src: https://github.com/fiyeli/api/archive/master.zip
    dest: ~/Fiyeli
    remote_src: yes
- name: rename api-master
  become: false
  command: mv ~/Fiyeli/api-master ~/Fiyeli/api

- name: ansible create directory img
  file:
      path: ~/Fiyeli/core/img
      state: directory
  become: false

- name: ansible create directory data
  file:
      path: ~/Fiyeli/core/data
      state: directory
  become: false

- name : Set env variable
  become: false
  shell: |
    echo "# Fiyeli Env Var" >> ~/.profile

    # Fiyeli directories
    export FIYELI_DIR="$HOME/Fiyeli"
    echo "export FIYELI_DIR=`pwd`" >> ~/.profile

    export FIYELI_CORE_DIR="$FIYELI_DIR/core"
    echo "export FIYELI_CORE_DIR=\"$FIYELI_DIR/core\"" >> ~/.profile

    export FIYELI_CAMERA_DIR="$FIYELI_DIR/camera"
    echo "export FIYELI_CAMERA_DIR=\"$FIYELI_DIR/camera\"" >> ~/.profile

    export FIYELI_AI_DIR="$FIYELI_DIR/Fiyeli-Darknet-NNPACK"
    echo "export FIYELI_AI_DIR=\"$FIYELI_DIR/Fiyeli-Darknet-NNPACK\"" >> ~/.profile

    export FIYELI_API_DIR="$FIYELI_DIR/api"
    echo "export FIYELI_API_DIR=\"$FIYELI_DIR/api\"" >> ~/.profile

    export FIYELI_IMAGES="$FIYELI_CORE_DIR/img"
    echo "export FIYELI_IMAGES=\"$FIYELI_CORE_DIR/img\"" >> ~/.profile

    export FIYELI_DATA="$FIYELI_CORE_DIR/data"
    echo "export FIYELI_DATA=\"$FIYELI_CORE_DIR/data\"" >> ~/.profile

    # Camera module
    export FIYELI_CAMERA_SHOT="$FIYELI_CAMERA_DIR/camera.py"
    echo "export FIYELI_CAMERA_SHOT=\"$FIYELI_CAMERA_DIR/camera.py\"" >> ~/.profile

    # AI module
    export FIYELI_AI_RUN="$FIYELI_AI_DIR/darknet detector person $FIYELI_AI_DIR/cfg/coco.data $FIYELI_AI_DIR/cfg/yolov2.cfg $FIYELI_AI_DIR/yolov2.weights "
    echo "export FIYELI_AI_RUN=\"$FIYELI_AI_DIR/darknet detector person $FIYELI_AI_DIR/cfg/coco.data $FIYELI_AI_DIR/cfg/yolov2.cfg $FIYELI_AI_DIR/yolov2.weights \"" >> ~/.profile

    # Main routine
    export FIYELI_CORE_ROUTINE="$FIYELI_CORE_DIR/routine.py"
    echo "export FIYELI_CORE_ROUTINE=\"$FIYELI_CORE_DIR/routine.py\"" >> ~/.profile

- name: Install git
  become: true
  apt:
    name: git

- name: Install pip
  become: true
  apt:
    name: python-pip

- name: install pip ia PeachPy
  pip:
    name: picamera

- name: install pip ia PeachPy
  pip:
    name: git+https://github.com/Maratyszcza/PeachPy

- name: install pip ia confu
  pip:
    name: git+https://github.com/Maratyszcza/confu

- name: install ninja
  become: true
  apt:
    name: ninja-build

# - name: Install ninja
#   become: false
#   shell: |
#     cd ~
#     # Install Ninja
#     # export CC=clang 
#     # export CXX=clang++ 
#     git clone https://github.com/ninja-build/ninja.git
#     cd ninja
#     git checkout release
#     ./configure.py --bootstrap

- name: Install clang
  become: true
  apt:
    name: clang

- name: clone NNPACK-darknet
  become: false
  git:
    repo: 'https://github.com/digitalbrain79/NNPACK-darknet.git'
    dest: ~/NNPACK-darknet

- name: Install NNPACK confu
  become: false
  shell: |
    cd ~/NNPACK-darknet
    confu setup

- name: Install NNPACK python configure
  become: false
  shell:  |
    cd ~/NNPACK-darknet
    python ./configure.py --backend auto

- name: Install NNPACK ninja
  become: false
  shell:  |
    cd ~/NNPACK-darknet
    ninja

- name: Copy binary
  become: false
  shell:  |
    cd ~/NNPACK-darknet
    sudo cp -a lib/* /usr/lib/
    sudo cp include/nnpack.h /usr/include/
    sudo cp deps/pthreadpool/include/pthreadpool.h /usr/include/

- name: build Fiyeli IA
  become: false
  shell: |
    # Build darknet (with NNpack by default)
    cd ~/Fiyeli/Fiyeli-Darknet-NNPACK
    make

- name: Download files weights from HTTP, HTTPS, or FTP to node
  become: false
  get_url:
    url: https://pjreddie.com/media/files/yolov2.weights
    dest: ~/Fiyeli/Fiyeli-Darknet-NNPACK

- name: Setup api
  become: false
  pip:
    requirements: ~/Fiyeli/api/requirements.txt

- name: install gunicorn
  become: true
  apt:
    name: gunicorn

- name: simple gunicorn run example
  become: false
  gunicorn:
    app: 'wsgi:app'
    chdir: '~/Fiyeli/api/'
    config: 'config.py'

# - name: 'Reboot'
#   shell: sleep 2 && reboot
#   async: 1
#   poll: 0
#   ignore_errors: true

# - name: "Wait for Raspberry PI to come back"
#   local_action: wait_for host={{ real_ansible_host }} port=22 state=started delay=10
#   become: false
